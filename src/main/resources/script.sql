-- Table ADMIN
CREATE TABLE IF NOT EXISTS ADMIN (
                                     id_admin INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                                     nom VARCHAR(255) NOT NULL,
                                     prenom VARCHAR(255) NOT NULL,
                                     email VARCHAR(255) NOT NULL UNIQUE,
                                     mot_de_passe VARCHAR(255) NOT NULL,
                                     url_profile VARCHAR(255)
);

-- Table PARTICIPANT
CREATE TABLE IF NOT EXISTS PARTICIPANT (
                                           id_participant INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                                           nom VARCHAR(255) NOT NULL,
                                           prenom VARCHAR(255) NOT NULL,
                                           email VARCHAR(255) NOT NULL UNIQUE,
                                           mot_de_passe VARCHAR(255) NOT NULL,
                                           url_profile VARCHAR(255),
                                           est_organisateur BOOLEAN DEFAULT FALSE,
                                           date_creation TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- Table CAUSE
CREATE TABLE IF NOT EXISTS CAUSE (
                                     id_cause INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                                     intitule VARCHAR(255) NOT NULL
);

-- Table COURSE
CREATE TABLE IF NOT EXISTS COURSE (
                                      id_course INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                                      id_cause INT,
                                      id_organisateur INT,
                                      nom VARCHAR(255) NOT NULL,
                                      description VARCHAR(10000),
                                      date_depart TIMESTAMP,
                                      ville VARCHAR(255),
                                      code_postal INT,
                                      adresse VARCHAR(255),
                                      distance FLOAT,
                                      max_participants INT,
                                      prix_participation FLOAT,
                                      obstacles VARCHAR(10000),
                                      FOREIGN KEY (id_cause) REFERENCES CAUSE(id_cause) ON DELETE SET NULL,
                                      FOREIGN KEY (id_organisateur) REFERENCES PARTICIPANT(id_participant) ON DELETE SET NULL
);

-- Table PARTICIPATION
CREATE TABLE IF NOT EXISTS PARTICIPATION (
                                             id_participation INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                                             id_participant INT NOT NULL,
                                             id_course INT NOT NULL,
                                             numero_dossard INT NOT NULL,
                                             date_reservation TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
                                             FOREIGN KEY (id_participant) REFERENCES PARTICIPANT(id_participant) ON DELETE CASCADE,
                                             FOREIGN KEY (id_course) REFERENCES COURSE(id_course) ON DELETE CASCADE
);

-- Table DEMANDE_ORGANISATEUR
CREATE TABLE IF NOT EXISTS DEMANDE_ORGANISATEUR (
                                                    id_demande INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                                                    id_participant INT NOT NULL,
                                                    motivations VARCHAR(10000) NOT NULL,
                                                    traite_par INT,
                                                    status VARCHAR(50) NOT NULL,
                                                    reponse BOOLEAN,
                                                    date_creation TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
                                                    date_traitement TIMESTAMP,
                                                    FOREIGN KEY (id_participant) REFERENCES PARTICIPANT(id_participant) ON DELETE CASCADE,
                                                    FOREIGN KEY (traite_par) REFERENCES ADMIN(id_admin) ON DELETE SET NULL
);

-- Table MESSAGE
CREATE TABLE IF NOT EXISTS MESSAGE (
                                       id_message INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                                       id_emetteur INT NOT NULL,
                                       id_course INT NOT NULL,
                                       id_message_parent INT,
                                       contenu VARCHAR(10000) NOT NULL,
                                       date_publication TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
                                       FOREIGN KEY (id_emetteur) REFERENCES PARTICIPANT(id_participant) ON DELETE CASCADE,
                                       FOREIGN KEY (id_course) REFERENCES COURSE(id_course) ON DELETE CASCADE,
                                       FOREIGN KEY (id_message_parent) REFERENCES MESSAGE(id_message) ON DELETE SET NULL
);
